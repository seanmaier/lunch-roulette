@page "/lunches"
@using BlazorBootstrap
@rendermode InteractiveServer
@inject ILunchService LunchService

<PageTitle>Lunches</PageTitle>

<h1>Lunches</h1>

<div class="d-flex gap-4 mb-5">

    <DateInput TValue="DateTime" @bind-Value="@_date" Placeholder="Enter Date"/>
    <button class="btn-primary" @onclick="GenerateGroups">+ Add Lunch</button>
</div>

<div class="d-flex flex-column gap-4">

    <h2>Last Lunches</h2>

    <button class="btn-error w-25" @onclick="DeleteLunches">Reset Lunches</button>

    @if (_lunches.Count == 0)
    {
        <p>
            <em>No existing lunches</em>
        </p>
    }

    <Accordion>
        @foreach (var lunch in _lunches)
        {
            <AccordionItem Title="@lunch.Date.ToString("dd.MM.yyyy")">

                <Content>

                    @foreach (var group in lunch.Groups)
                    {
                        int color = 145 + group.GetHashCode() % 700;
                        <div class="d-flex flex-wrap m-3">
                            @foreach (var member in group.Members)
                            {
                                <span class="badge me-1" style="background-color: hsl(@color, 70%, 30%)">@member.Person.Name</span>
                            }
                        </div>
                    }
                </Content>
            </AccordionItem>
        }
    </Accordion>
</div>

@code {

    private DateTime _date = DateTime.Now;

    private List<Lunch> _lunches = [];
    private bool HasLunches => _lunches.Count > 0;

    protected override void OnInitialized()
    {
        LoadLunches();

        base.OnInitialized();
    }

    private void LoadLunches() =>
        _lunches = LunchService.GetLunches();

    private void GenerateGroups()
    {
        LunchService.CreateLunch(_date);

        LoadLunches();
    }

    private void DeleteLunches()
    {
        LunchService.ResetLunches();
        LoadLunches();
    }

}